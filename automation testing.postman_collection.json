{
	"info": {
		"_postman_id": "047745d8-ff1d-490c-a769-ba1711271de9",
		"name": "automation testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData = pm.response.json();",
							"pm.environment.set(\"token\", jsonData.token);",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "login",
							"value": "Andrey",
							"type": "text"
						},
						{
							"key": "password",
							"value": "123",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{ip_and_port}}/login",
					"host": [
						"{{ip_and_port}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"const schema = {",
							"    \"required\": [",
							"        \"person\",",
							"        \"qa_salary_after_12_months\",",
							"        \"qa_salary_after_6_months\",",
							"        \"start_qa_salary\"",
							"    ],",
							"    \"properties\": {",
							"        \"person\": {",
							"            \"$id\": \"#/properties/person\",",
							"            \"type\": \"object\",",
							"            \"title\": \"The person schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": {},",
							"            \"examples\": [",
							"                {",
							"                    \"u_age\": 15,",
							"                    \"u_name\": [",
							"                        \"Andrey\",",
							"                        111,",
							"                        15",
							"                    ],",
							"                    \"u_salary_1_5_year\": 444",
							"                }",
							"            ],",
							"            \"required\": [",
							"                \"u_age\",",
							"                \"u_name\",",
							"                \"u_salary_1_5_year\"",
							"            ],",
							"            \"properties\": {",
							"                \"u_age\": {",
							"                    \"$id\": \"#/properties/person/properties/u_age\",",
							"                    \"type\": \"integer\",",
							"                    \"title\": \"The u_age schema\",",
							"                    \"description\": \"An explanation about the purpose of this instance.\",",
							"                    \"default\": 0,",
							"                    \"examples\": [",
							"                        15",
							"                    ]",
							"                },",
							"                \"u_name\": {",
							"                    \"$id\": \"#/properties/person/properties/u_name\",",
							"                    \"type\": \"array\",",
							"                    \"title\": \"The u_name schema\",",
							"                    \"description\": \"An explanation about the purpose of this instance.\",",
							"                    \"default\": [],",
							"                    \"examples\": [",
							"                        [",
							"                            \"Andrey\",",
							"                            111",
							"                        ]",
							"                    ],",
							"                    \"additionalItems\": true,",
							"                    \"items\": {",
							"                        \"$id\": \"#/properties/person/properties/u_name/items\",",
							"                        \"anyOf\": [",
							"                            {",
							"                                \"$id\": \"#/properties/person/properties/u_name/items/anyOf/0\",",
							"                                \"type\": \"string\",",
							"                                \"title\": \"The first anyOf schema\",",
							"                                \"description\": \"An explanation about the purpose of this instance.\",",
							"                                \"default\": \"\",",
							"                                \"examples\": [",
							"                                    \"Andrey\"",
							"                                ]",
							"                            },",
							"                            {",
							"                                \"$id\": \"#/properties/person/properties/u_name/items/anyOf/1\",",
							"                                \"type\": \"integer\",",
							"                                \"title\": \"The second anyOf schema\",",
							"                                \"description\": \"An explanation about the purpose of this instance.\",",
							"                                \"default\": 0,",
							"                                \"examples\": [",
							"                                    111,",
							"                                    15",
							"                                ]",
							"                            }",
							"                        ]",
							"                    }",
							"                },",
							"                \"u_salary_1_5_year\": {",
							"                    \"$id\": \"#/properties/person/properties/u_salary_1_5_year\",",
							"                    \"type\": \"integer\",",
							"                    \"title\": \"The u_salary_1_5_year schema\",",
							"                    \"description\": \"An explanation about the purpose of this instance.\",",
							"                    \"default\": 0,",
							"                    \"examples\": [",
							"                        444",
							"                    ]",
							"                }",
							"            },",
							"            \"additionalProperties\": true",
							"        },",
							"        \"qa_salary_after_12_months\": {",
							"            \"$id\": \"#/properties/qa_salary_after_12_months\",",
							"            \"type\": \"number\",",
							"            \"title\": \"The qa_salary_after_12_months schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": 0.0,",
							"            \"examples\": [",
							"                321.9",
							"            ]",
							"        },",
							"        \"qa_salary_after_6_months\": {",
							"            \"$id\": \"#/properties/qa_salary_after_6_months\",",
							"            \"type\": \"integer\",",
							"            \"title\": \"The qa_salary_after_6_months schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": 0,",
							"            \"examples\": [",
							"                222",
							"            ]",
							"        },",
							"        \"start_qa_salary\": {",
							"            \"$id\": \"#/properties/start_qa_salary\",",
							"            \"type\": \"integer\",",
							"            \"title\": \"The start_qa_salary schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": 0,",
							"            \"examples\": [",
							"                111",
							"            ]",
							"        }",
							"    },",
							"    \"additionalProperties\": true",
							"",
							"}",
							"pm.test('Schema is valid', ()=> {",
							"    pm.response.to.have.jsonSchema(schema);",
							"});",
							"",
							"const json = pm.response.json();",
							"const salary = json.person.u_name[1];",
							"pm.test(\"Salary is valid\", ()=>{",
							"    let salary_1_5_year = salary * 4",
							"    let salary_after_6_months = salary * 2",
							"    let salary_12_months = salary * 2.9",
							"",
							"    pm.expect(json.qa_salary_after_6_months).to.eql(salary_after_6_months)",
							"    pm.expect(json.qa_salary_after_12_months).to.eql(salary_12_months)",
							"    pm.expect(json.person.u_salary_1_5_year).to.eql(salary_1_5_year)",
							"})",
							"pm.environment.set(\"u_salary_1.5_year\",json.person.u_name[2])",
							"",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"age\" : 15,\n   \"salary\" : 10,\n   \"name\" : \"Andrey\",\n   \"auth_token\" : \"{{token}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{ip_and_port}}/user_info",
					"host": [
						"{{ip_and_port}}"
					],
					"path": [
						"user_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "new_data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const shema = {",
							"    \"properties\": {",
							"        \"age\": {",
							"            \"$id\": \"#/properties/age\",",
							"            \"type\": \"integer\",",
							"            \"title\": \"The age schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": 0,",
							"            \"examples\": [",
							"                15",
							"            ]",
							"        },",
							"        \"name\": {",
							"            \"$id\": \"#/properties/name\",",
							"            \"type\": \"string\",",
							"            \"title\": \"The name schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": \"\",",
							"            \"examples\": [",
							"                \"Andrey\"",
							"            ]",
							"        },",
							"        \"salary\": {",
							"            \"$id\": \"#/properties/salary\",",
							"            \"type\": \"array\",",
							"            \"title\": \"The salary schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": [],",
							"            \"examples\": [",
							"                [",
							"                    111,",
							"                    \"222\"",
							"                ]",
							"            ],",
							"            \"additionalItems\": true,",
							"            \"items\": {",
							"                \"$id\": \"#/properties/salary/items\",",
							"                \"anyOf\": [",
							"                    {",
							"                        \"$id\": \"#/properties/salary/items/anyOf/0\",",
							"                        \"type\": \"integer\",",
							"                        \"title\": \"The first anyOf schema\",",
							"                        \"description\": \"An explanation about the purpose of this instance.\",",
							"                        \"default\": 0,",
							"                        \"examples\": [",
							"                            111",
							"                        ]",
							"                    },",
							"                    {",
							"                        \"$id\": \"#/properties/salary/items/anyOf/1\",",
							"                        \"type\": \"string\",",
							"                        \"title\": \"The second anyOf schema\",",
							"                        \"description\": \"An explanation about the purpose of this instance.\",",
							"                        \"default\": \"\",",
							"                        \"examples\": [",
							"                            \"222\",",
							"                            \"333\"",
							"                        ]",
							"                    }",
							"                ]",
							"            }",
							"        }",
							"    },",
							"    \"additionalProperties\": true",
							"}",
							"const json = pm.response.json();",
							"pm.test(\"Schema is valid\",()=>{",
							"    pm.response.to.have.jsonSchema(shema)",
							"})",
							"",
							"pm.test(\"salary rate is valid\",()=>{",
							"    const salary = json.salary[0]",
							"    pm.expect(+json.salary[1]).to.eql(salary * 2)",
							"    pm.expect(+json.salary[2]).to.eql(salary * 3)",
							"",
							"})",
							"pm.test(\"test witch salary the biggest\",()=>{",
							"    pm.expect(json.salary[2] > json.salary[1]).to.be.true",
							"    pm.expect(json.salary[2] > json.salary[0]).to.be.true",
							"",
							"})",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "15",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "111",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Andrey",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{ip_and_port}}/new_data",
					"host": [
						"{{ip_and_port}}"
					],
					"path": [
						"new_data"
					]
				}
			},
			"response": []
		},
		{
			"name": "test_pet_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const schema = {",
							" \"required\": [",
							"        \"age\",",
							"        \"daily_food\",",
							"        \"daily_sleep\",",
							"        \"name\"",
							"    ],",
							"    \"properties\": {",
							"        \"age\": {",
							"            \"$id\": \"#/properties/age\",",
							"            \"type\": \"integer\",",
							"            \"title\": \"The age schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": 0,",
							"            \"examples\": [",
							"                15",
							"            ]",
							"        },",
							"        \"daily_food\": {",
							"            \"$id\": \"#/properties/daily_food\",",
							"            \"type\": \"number\",",
							"            \"title\": \"The daily_food schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": 0.0,",
							"            \"examples\": [",
							"                0.528",
							"            ]",
							"        },",
							"        \"daily_sleep\": {",
							"            \"$id\": \"#/properties/daily_sleep\",",
							"            \"type\": \"number\",",
							"            \"title\": \"The daily_sleep schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": 0.0,",
							"            \"examples\": [",
							"                110.0",
							"            ]",
							"        },",
							"        \"name\": {",
							"            \"$id\": \"#/properties/name\",",
							"            \"type\": \"string\",",
							"            \"title\": \"The name schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": \"\",",
							"            \"examples\": [",
							"                \"Andrey\"",
							"            ]",
							"        }",
							"    },",
							"    \"additionalProperties\": true",
							"}",
							"pm.test(\"Schema is valid\",()=>{",
							"    pm.response.to.have.jsonSchema(schema)",
							"})",
							"",
							"pm.test(\"waight rate is valid\",()=>{",
							"    const res = pm.response.json();",
							"    const weight = request.data.weight",
							"    let daily_food = weight * 0.012",
							"    let daily_sleep = weight * 2.5",
							"    pm.expect(res.daily_food).to.eql(daily_food)",
							"    pm.expect(res.daily_sleep).to.eql(daily_sleep)",
							"})",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "15",
							"type": "text"
						},
						{
							"key": "weight",
							"value": "44",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Andrey",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{ip_and_port}}/test_pet_info",
					"host": [
						"{{ip_and_port}}"
					],
					"path": [
						"test_pet_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "get_test_user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const schema = {",
							"\"required\": [",
							"        \"age\",",
							"        \"family\",",
							"        \"name\",",
							"        \"salary\"",
							"    ],",
							"    \"properties\": {",
							"        \"age\": {",
							"            \"$id\": \"#/properties/age\",",
							"            \"type\": \"string\",",
							"            \"title\": \"The age schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": \"\",",
							"            \"examples\": [",
							"                \"25\"",
							"            ]",
							"        },",
							"        \"family\": {",
							"            \"$id\": \"#/properties/family\",",
							"            \"type\": \"object\",",
							"            \"title\": \"The family schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": {},",
							"            \"examples\": [",
							"                {",
							"                    \"children\": [",
							"                        [",
							"                            \"Alex\",",
							"                            24",
							"                        ],",
							"                        [",
							"                            \"Kate\",",
							"                            12",
							"                        ]",
							"                    ],",
							"                    \"u_salary_1_5_year\": 60",
							"                }",
							"            ],",
							"            \"required\": [",
							"                \"children\",",
							"                \"u_salary_1_5_year\"",
							"            ],",
							"            \"properties\": {",
							"                \"children\": {",
							"                    \"$id\": \"#/properties/family/properties/children\",",
							"                    \"type\": \"array\",",
							"                    \"title\": \"The children schema\",",
							"                    \"description\": \"An explanation about the purpose of this instance.\",",
							"                    \"default\": [],",
							"                    \"examples\": [",
							"                        [",
							"                            [",
							"                                \"Alex\",",
							"                                24",
							"                            ],",
							"                            [",
							"                                \"Kate\",",
							"                                12",
							"                            ]",
							"                        ]",
							"                    ],",
							"                    \"additionalItems\": true,",
							"                    \"items\": {",
							"                        \"$id\": \"#/properties/family/properties/children/items\",",
							"                        \"anyOf\": [",
							"                            {",
							"                                \"$id\": \"#/properties/family/properties/children/items/anyOf/0\",",
							"                                \"type\": \"array\",",
							"                                \"title\": \"The first anyOf schema\",",
							"                                \"description\": \"An explanation about the purpose of this instance.\",",
							"                                \"default\": [],",
							"                                \"examples\": [",
							"                                    [",
							"                                        \"Alex\",",
							"                                        24",
							"                                    ]",
							"                                ],",
							"                                \"additionalItems\": true,",
							"                                \"items\": {",
							"                                    \"$id\": \"#/properties/family/properties/children/items/anyOf/0/items\",",
							"                                    \"anyOf\": [",
							"                                        {",
							"                                            \"$id\": \"#/properties/family/properties/children/items/anyOf/0/items/anyOf/0\",",
							"                                            \"type\": \"string\",",
							"                                            \"title\": \"The first anyOf schema\",",
							"                                            \"description\": \"An explanation about the purpose of this instance.\",",
							"                                            \"default\": \"\",",
							"                                            \"examples\": [",
							"                                                \"Alex\"",
							"                                            ]",
							"                                        },",
							"                                        {",
							"                                            \"$id\": \"#/properties/family/properties/children/items/anyOf/0/items/anyOf/1\",",
							"                                            \"type\": \"integer\",",
							"                                            \"title\": \"The second anyOf schema\",",
							"                                            \"description\": \"An explanation about the purpose of this instance.\",",
							"                                            \"default\": 0,",
							"                                            \"examples\": [",
							"                                                24",
							"                                            ]",
							"                                        }",
							"                                    ]",
							"                                }",
							"                            },",
							"                            {",
							"                                \"$id\": \"#/properties/family/properties/children/items/anyOf/1\",",
							"                                \"type\": \"array\",",
							"                                \"title\": \"The second anyOf schema\",",
							"                                \"description\": \"An explanation about the purpose of this instance.\",",
							"                                \"default\": [],",
							"                                \"examples\": [",
							"                                    [",
							"                                        \"Kate\",",
							"                                        12",
							"                                    ]",
							"                                ],",
							"                                \"additionalItems\": true,",
							"                                \"items\": {",
							"                                    \"$id\": \"#/properties/family/properties/children/items/anyOf/1/items\",",
							"                                    \"anyOf\": [",
							"                                        {",
							"                                            \"$id\": \"#/properties/family/properties/children/items/anyOf/1/items/anyOf/0\",",
							"                                            \"type\": \"string\",",
							"                                            \"title\": \"The first anyOf schema\",",
							"                                            \"description\": \"An explanation about the purpose of this instance.\",",
							"                                            \"default\": \"\",",
							"                                            \"examples\": [",
							"                                                \"Kate\"",
							"                                            ]",
							"                                        },",
							"                                        {",
							"                                            \"$id\": \"#/properties/family/properties/children/items/anyOf/1/items/anyOf/1\",",
							"                                            \"type\": \"integer\",",
							"                                            \"title\": \"The second anyOf schema\",",
							"                                            \"description\": \"An explanation about the purpose of this instance.\",",
							"                                            \"default\": 0,",
							"                                            \"examples\": [",
							"                                                12",
							"                                            ]",
							"                                        }",
							"                                    ]",
							"                                }",
							"                            }",
							"                        ]",
							"                    }",
							"                },",
							"                \"u_salary_1_5_year\": {",
							"                    \"$id\": \"#/properties/family/properties/u_salary_1_5_year\",",
							"                    \"type\": \"integer\",",
							"                    \"title\": \"The u_salary_1_5_year schema\",",
							"                    \"description\": \"An explanation about the purpose of this instance.\",",
							"                    \"default\": 0,",
							"                    \"examples\": [",
							"                        60",
							"                    ]",
							"                }",
							"            },",
							"            \"additionalProperties\": true",
							"        },",
							"        \"name\": {",
							"            \"$id\": \"#/properties/name\",",
							"            \"type\": \"string\",",
							"            \"title\": \"The name schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": \"\",",
							"            \"examples\": [",
							"                \"Andrey\"",
							"            ]",
							"        },",
							"        \"salary\": {",
							"            \"$id\": \"#/properties/salary\",",
							"            \"type\": \"integer\",",
							"            \"title\": \"The salary schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": 0,",
							"            \"examples\": [",
							"                15",
							"            ]",
							"        }",
							"    },",
							"    \"additionalProperties\": true",
							"}",
							"const json = pm.response.json();",
							"pm.test('Schema is valid', ()=>{",
							"  pm.expect(tv4.validate(json, schema)).to.be.true;",
							"});",
							"",
							"pm.test(\"name is valid\",()=>{",
							"    const name = pm.environment.get(\"name_Andrey\");",
							"    pm.expect(json.name).to.eql(name)",
							"})",
							"pm.test(\"age is valid\", ()=>{",
							"    let req = JSON.parse(responseBody)",
							"    pm.expect(req.age).to.eql(json.age)",
							"})",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "25",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{u_salary_1.5_year}} ",
							"type": "text"
						},
						{
							"key": "name",
							"value": "{{name_Andrey}}",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{ip_and_port}}/get_test_user",
					"host": [
						"{{ip_and_port}}"
					],
					"path": [
						"get_test_user"
					]
				}
			},
			"response": []
		},
		{
			"name": "currency",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const res = pm.response.json()",
							"let lenght = (obj)=>{",
							"    return Object.keys(obj).length",
							"}",
							"let random = Math.floor(Math.random() * lenght(res))",
							"let randomID = res[random]",
							"pm.environment.set(\"currency_lenght\",lenght(res))",
							"pm.environment.set(\"cur_id\",randomID.Cur_ID)",
							"",
							"",
							"let arr = new Array();",
							"for(let a = 0;a < lenght(res);a++) {",
							"let token = pm.environment.get(\"token\")",
							"let cur_id = res[a].Cur_ID",
							"let info = {",
							"    \"async\" : true,",
							"    \"url\" : \"162.55.220.72:5005/curr_byn\",",
							"    \"method\" : \"POST\",",
							"    \"body\" : {",
							"        \"mode\": \"formdata\",",
							"        \"formdata\" : [{",
							"            \"key\" : \"auth_token\",",
							"            \"value\" : token,",
							"            \"type\" : \"text\"",
							"        },",
							"        {",
							"            \"key\" : \"curr_code\",",
							"            \"value\" : cur_id,",
							"            \"type\" : \"text\"",
							"        }]",
							"    }",
							"}",
							"pm.sendRequest(info, function (err, res) {",
							"    if(res.code == 200) {",
							"        arr.push(cur_id)",
							"        console.log(arr)",
							"    }",
							"",
							"});",
							"}",
							"",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{ip_and_port}}/currency",
					"host": [
						"{{ip_and_port}}"
					],
					"path": [
						"currency"
					]
				}
			},
			"response": []
		},
		{
			"name": "curr_byn",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var schema = {",
							"\"required\": [",
							"        \"Cur_Abbreviation\",",
							"        \"Cur_ID\",",
							"        \"Cur_Name\",",
							"        \"Cur_OfficialRate\",",
							"        \"Cur_Scale\",",
							"        \"Date\"",
							"    ],",
							"    \"properties\": {",
							"        \"Cur_Abbreviation\": {",
							"            \"$id\": \"#/properties/Cur_Abbreviation\",",
							"            \"type\": \"string\",",
							"            \"title\": \"The Cur_Abbreviation schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": \"\",",
							"            \"examples\": [",
							"                \"SDG\"",
							"            ]",
							"        },",
							"        \"Cur_ID\": {",
							"            \"$id\": \"#/properties/Cur_ID\",",
							"            \"type\": \"integer\",",
							"            \"title\": \"The Cur_ID schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": 0,",
							"            \"examples\": [",
							"                499",
							"            ]",
							"        },",
							"        \"Cur_Name\": {",
							"            \"$id\": \"#/properties/Cur_Name\",",
							"            \"type\": \"string\",",
							"            \"title\": \"The Cur_Name schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": \"\",",
							"            \"examples\": [",
							"                \"Суданских фунтов\"",
							"            ]",
							"        },",
							"        \"Cur_OfficialRate\": {",
							"            \"$id\": \"#/properties/Cur_OfficialRate\",",
							"            \"type\": \"number\",",
							"            \"title\": \"The Cur_OfficialRate schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": 0.0,",
							"            \"examples\": [",
							"                0.0561",
							"            ]",
							"        },",
							"        \"Cur_Scale\": {",
							"            \"$id\": \"#/properties/Cur_Scale\",",
							"            \"type\": \"integer\",",
							"            \"title\": \"The Cur_Scale schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": 0,",
							"            \"examples\": [",
							"                10",
							"            ]",
							"        },",
							"        \"Date\": {",
							"            \"$id\": \"#/properties/Date\",",
							"            \"type\": \"string\",",
							"            \"title\": \"The Date schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": \"\",",
							"            \"examples\": [",
							"                \"2021-08-12T00:00:00\"",
							"            ]",
							"        }",
							"    },",
							"    \"additionalProperties\": true",
							"}",
							"var res = pm.response.json()",
							"pm.test(\"Schema is valid\",()=>{",
							"    pm.expect(tv4.validate(res,schema)).to.be.true",
							"})",
							"console.log(res)",
							"",
							"",
							"",
							"",
							"",
							"// postman.setNextRequest(currency)",
							"",
							"",
							"// var req = pm.environment.get(\"req\")",
							"// var lenght = (obj)=>{",
							"//     return Object.keys(obj).length",
							"// }",
							"",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// var token = pm.environment.get(\"token\")",
							"// var info = {",
							"//     \"async\" : true,",
							"//     // \"crossDomain\" : true,",
							"//     \"url\" : \"162.55.220.72:5005/currency\",",
							"//     \"method\" : \"POST\",",
							"//     \"body\" : {",
							"//         \"mode\": \"formdata\",",
							"//         \"formdata\" : [{",
							"//             \"key\" : \"auth_token\",",
							"//             \"value\" : token,",
							"//             \"type\" : \"text\"",
							"//         }]",
							"//     }",
							"// }",
							"",
							"// pm.sendRequest(info, function (err, response) {",
							"   ",
							"// });",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						},
						{
							"key": "curr_code",
							"value": "{{cur_id}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{ip_and_port}}/curr_byn",
					"host": [
						"{{ip_and_port}}"
					],
					"path": [
						"curr_byn"
					]
				}
			},
			"response": []
		},
		{
			"name": "111",
			"request": {
				"method": "GET",
				"header": [],
				"url": null
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Status code is 200\", ()=>{",
					"    pm.response.to.have.status(200)",
					"});",
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "u_salary_1.5_year",
			"value": ""
		}
	]
}